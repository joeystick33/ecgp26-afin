"""
Module d'analyse du BFR et de la tr√©sorerie
Calcul du TRIO FONDAMENTAL : FR, BFR, Tr√©sorerie

üéì POURQUOI C'EST IMPORTANT POUR LES √âTUDIANTS ?
=================================================

Le FR, BFR et la Tr√©sorerie forment le TRIO le plus important en analyse financi√®re.
C'est LA base que tout √©tudiant DOIT ma√Ætriser pour comprendre la sant√© d'une entreprise.

üìö ANALOGIE SIMPLE :
Imaginez que vous louez un appartement (immobilisation) avec votre salaire (capitaux propres)
et un pr√™t bancaire (dettes long terme). Il vous reste de l'argent pour vivre (FR).

Mais vous achetez vos courses √† cr√©dit au supermarch√© (dettes fournisseurs),
et vos clients vous doivent de l'argent (cr√©ances). Le d√©calage entre ce qu'on vous doit
et ce que vous devez, c'est le BFR.

L'argent qui vous reste vraiment en poche, c'est la Tr√©sorerie = FR - BFR
"""

from typing import Dict, Any
from dataclasses import dataclass


@dataclass
class AnalyseBFR:
    """
    Analyse compl√®te du Fonds de Roulement, BFR et Tr√©sorerie
    """
    # Les 3 indicateurs fondamentaux
    fonds_roulement: float
    bfr: float  
    tresorerie_nette: float
    
    # D√©tails pour p√©dagogie
    ressources_stables: float
    emplois_stables: float
    actif_exploitation: float
    passif_exploitation: float
    
    # Interpr√©tations
    interpretation_fr: str
    interpretation_bfr: str
    interpretation_tresorerie: str
    niveau_sante: str  # "üü¢ Excellent", "üü° √Ä surveiller", "üî¥ Critique"
    
    def to_dict(self) -> Dict[str, Any]:
        return {
            "fonds_roulement": round(self.fonds_roulement, 2),
            "bfr": round(self.bfr, 2),
            "tresorerie_nette": round(self.tresorerie_nette, 2),
            "details": {
                "ressources_stables": round(self.ressources_stables, 2),
                "emplois_stables": round(self.emplois_stables, 2),
                "actif_exploitation": round(self.actif_exploitation, 2),
                "passif_exploitation": round(self.passif_exploitation, 2)
            },
            "interpretations": {
                "fr": self.interpretation_fr,
                "bfr": self.interpretation_bfr,
                "tresorerie": self.interpretation_tresorerie,
                "niveau_global": self.niveau_sante
            }
        }


class AnalyseurBFR:
    """
    Calculateur p√©dagogique pour FR, BFR et Tr√©sorerie
    """
    
    @staticmethod
    def calculer_analyse_complete(donnees: Dict[str, float]) -> AnalyseBFR:
        """
        Calcule FR, BFR, Tr√©sorerie avec explications p√©dagogiques
        
        üìñ POURQUOI ON CALCULE CES 3 INDICATEURS ?
        ==========================================
        
        1Ô∏è‚É£ FONDS DE ROULEMENT (FR) ‚Üí R√©serve de s√©curit√©
           Question : "Ai-je assez de ressources stables pour financer mes investissements ?"
           
        2Ô∏è‚É£ BFR ‚Üí Argent immobilis√© dans le cycle d'exploitation
           Question : "Combien d'argent est bloqu√© en attendant les paiements clients ?"
           
        3Ô∏è‚É£ TR√âSORERIE ‚Üí Cash r√©ellement disponible
           Question : "Combien ai-je en banque pour faire face aux impr√©vus ?"
        """
        
        # =========================================================================
        # √âTAPE 1 : CALCUL DU FONDS DE ROULEMENT (FR)
        # =========================================================================
        """
        üéØ OBJECTIF : Mesurer la marge de s√©curit√© financi√®re
        
        üí° FORMULE : FR = RESSOURCES STABLES - EMPLOIS STABLES
        
        üìö EXPLICATION √âTAPE PAR √âTAPE :
        
        √âtape 1a) Identifier les RESSOURCES STABLES (argent disponible longtemps)
        -------------------------------------------------------------------------
        - Capitaux propres : argent des actionnaires (jamais √† rembourser)
        - Dettes long terme : emprunts > 1 an (remboursables lentement)
        
        √âtape 1b) Identifier les EMPLOIS STABLES (investissements durables)
        --------------------------------------------------------------------
        - Immobilisations : machines, b√¢timents, brevets (utilis√©s plusieurs ann√©es)
        
        √âtape 1c) Calculer l'exc√©dent
        ------------------------------
        Si RESSOURCES > EMPLOIS ‚Üí FR positif ‚úÖ 
        = Il reste de l'argent apr√®s avoir financ√© les investissements
        
        Si RESSOURCES < EMPLOIS ‚Üí FR n√©gatif ‚ö†Ô∏è
        = On a financ√© des investissements avec des dettes court terme (DANGER!)
        """
        
        # Ressources stables = Ce qui ne part pas rapidement
        capitaux_propres = donnees.get("capitaux_propres", 0)
        dettes_long_terme = donnees.get("emprunts_long_terme", 0)
        
        # Si pas de d√©tail LT, on estime 70% des dettes totales
        if dettes_long_terme == 0:
            dettes_long_terme = donnees.get("dettes_financieres", 0) * 0.7
        
        ressources_stables = capitaux_propres + dettes_long_terme
        
        # Emplois stables = Actifs immobilis√©s
        # On reconstruit si manquant
        immobilisations = donnees.get("immobilisations_incorporelles", 0) + \
                         donnees.get("immobilisations_corporelles", 0) + \
                         donnees.get("immobilisations_financieres", 0)
        
        # Si pas de d√©tail, on estime √† partir du total actif
        if immobilisations == 0:
            total_actif = donnees.get("total_actif", 0)
            actif_circulant = donnees.get("actif_circulant", 0)
            immobilisations = total_actif - actif_circulant
        
        emplois_stables = immobilisations
        
        # CALCUL FINAL FR
        fonds_roulement = ressources_stables - emplois_stables
        
        
        # =========================================================================
        # √âTAPE 2 : CALCUL DU BFR (Besoin en Fonds de Roulement)
        # =========================================================================
        """
        üéØ OBJECTIF : Mesurer l'argent immobilis√© dans le cycle d'exploitation
        
        üí° FORMULE : BFR = ACTIF D'EXPLOITATION - PASSIF D'EXPLOITATION
        
        üìö EXPLICATION √âTAPE PAR √âTAPE :
        
        √âtape 2a) Identifier l'ACTIF D'EXPLOITATION (argent bloqu√©)
        ------------------------------------------------------------
        - Stocks : marchandises pas encore vendues
        - Cr√©ances clients : ventes faites mais pas encore pay√©es
        
        ‚Üí PROBL√àME : Cet argent est "coinc√©" en attendant
        
        √âtape 2b) Identifier le PASSIF D'EXPLOITATION (cr√©dit gratuit)
        ---------------------------------------------------------------
        - Dettes fournisseurs : achats faits mais pas encore pay√©s
        
        ‚Üí AVANTAGE : Les fournisseurs nous font cr√©dit gratuitement
        
        √âtape 2c) Calculer le besoin net
        ---------------------------------
        BFR = Ce qui est bloqu√© - Ce qu'on doit
        
        Si BFR > 0 ‚Üí Besoin de financement ‚ö†Ô∏è
        = On encaisse apr√®s avoir pay√© (normal mais co√ªteux)
        
        Si BFR < 0 ‚Üí Ressource de financement ‚úÖ (RARE mais id√©al)
        = On encaisse avant de payer (ex: grande distribution)
        
        Si BFR = 0 ‚Üí √âquilibre parfait
        """
        
        # Actif d'exploitation = Argent temporairement bloqu√©
        stocks = donnees.get("stocks", 0)
        creances_clients = donnees.get("creances_clients", 0)
        actif_exploitation = stocks + creances_clients
        
        # Passif d'exploitation = Cr√©dit gratuit des fournisseurs
        dettes_fournisseurs = donnees.get("dettes_fournisseurs", 0)
        dettes_fiscales_sociales = donnees.get("dettes_fiscales_sociales", 0)
        passif_exploitation = dettes_fournisseurs + dettes_fiscales_sociales
        
        # CALCUL FINAL BFR
        bfr = actif_exploitation - passif_exploitation
        
        
        # =========================================================================
        # √âTAPE 3 : CALCUL DE LA TR√âSORERIE NETTE
        # =========================================================================
        """
        üéØ OBJECTIF : Conna√Ætre le cash r√©ellement disponible
        
        üí° FORMULE : TR√âSORERIE = FR - BFR
        
        üìö EXPLICATION √âTAPE PAR √âTAPE :
        
        √âtape 3a) Comprendre la logique
        --------------------------------
        FR = R√©serve de s√©curit√© disponible
        BFR = Argent bloqu√© dans l'exploitation
        
        Tr√©sorerie = Ce qui reste vraiment en poche
        
        √âtape 3b) Interpr√©ter le r√©sultat
        ----------------------------------
        Tr√©sorerie > 0 ‚Üí Exc√©dent de cash ‚úÖ
        = L'entreprise a de l'argent en banque
        
        Tr√©sorerie = 0 ‚Üí √âquilibre juste
        = Pas d'exc√©dent ni de d√©couvert
        
        Tr√©sorerie < 0 ‚Üí D√©couvert bancaire ‚ö†Ô∏è
        = L'entreprise est √† d√©couvert, elle emprunte √† court terme
        
        üö® ALERTE SI TR√âSORERIE N√âGATIVE :
        Cela signifie que m√™me apr√®s avoir mobilis√© toutes ses ressources stables,
        l'entreprise n'a pas assez pour financer son BFR ‚Üí elle emprunte en urgence
        """
        
        # CALCUL FINAL TR√âSORERIE
        tresorerie_nette = fonds_roulement - bfr
        
        # V√©rification avec les disponibilit√©s r√©elles
        disponibilites_reelles = donnees.get("disponibilites", 0)
        emprunts_court_terme = donnees.get("emprunts_court_terme", 0)
        tresorerie_verifiee = disponibilites_reelles - emprunts_court_terme
        
        
        # =========================================================================
        # √âTAPE 4 : INTERPR√âTATIONS P√âDAGOGIQUES
        # =========================================================================
        
        # Interpr√©tation FR
        if fonds_roulement > 0:
            interpretation_fr = f"‚úÖ POSITIF ({fonds_roulement:,.0f} ‚Ç¨) : Marge de s√©curit√© suffisante. Les ressources stables couvrent les emplois stables."
        elif fonds_roulement == 0:
            interpretation_fr = "‚ö†Ô∏è NUL : √âquilibre juste, aucune marge. Situation fragile en cas d'impr√©vu."
        else:
            interpretation_fr = f"üî¥ N√âGATIF ({fonds_roulement:,.0f} ‚Ç¨) : DANGER ! Les immobilisations sont financ√©es par des dettes court terme. Risque de faillite √©lev√©."
        
        # Interpr√©tation BFR
        if bfr > 0:
            jours_ca = (bfr / donnees.get("chiffre_affaires", 1)) * 365 if donnees.get("chiffre_affaires", 0) > 0 else 0
            interpretation_bfr = f"‚ö†Ô∏è POSITIF ({bfr:,.0f} ‚Ç¨) : Besoin de financement. Argent immobilis√© pendant ~{jours_ca:.0f} jours. √Ä r√©duire en n√©gociant d√©lais clients/fournisseurs."
        elif bfr == 0:
            interpretation_bfr = "‚úÖ NUL : √âquilibre parfait entre cr√©ances et dettes d'exploitation."
        else:
            interpretation_bfr = f"üéâ N√âGATIF ({bfr:,.0f} ‚Ç¨) : EXCELLENT ! Ressource de financement. Vous encaissez avant de payer (mod√®le Amazon/Grande distribution)."
        
        # Interpr√©tation Tr√©sorerie
        if tresorerie_nette > 0:
            interpretation_tresorerie = f"‚úÖ POSITIVE ({tresorerie_nette:,.0f} ‚Ç¨) : Cash disponible. Entreprise solvable et peut investir ou distribuer des dividendes."
        elif tresorerie_nette == 0:
            interpretation_tresorerie = "‚ö†Ô∏è NULLE : Aucun exc√©dent de cash. Situation tendue, surveiller de pr√®s."
        else:
            interpretation_tresorerie = f"üî¥ N√âGATIVE ({tresorerie_nette:,.0f} ‚Ç¨) : D√âCOUVERT ! L'entreprise emprunte √† court terme pour survivre. Action urgente n√©cessaire."
        
        # Diagnostic global
        if tresorerie_nette > 0 and fonds_roulement > 0:
            niveau_sante = "üü¢ Sant√© financi√®re SOLIDE"
        elif tresorerie_nette >= 0 or fonds_roulement > 0:
            niveau_sante = "üü° Sant√© financi√®re FRAGILE - √Ä surveiller"
        else:
            niveau_sante = "üî¥ Sant√© financi√®re CRITIQUE - Risque √©lev√©"
        
        return AnalyseBFR(
            fonds_roulement=fonds_roulement,
            bfr=bfr,
            tresorerie_nette=tresorerie_nette,
            ressources_stables=ressources_stables,
            emplois_stables=emplois_stables,
            actif_exploitation=actif_exploitation,
            passif_exploitation=passif_exploitation,
            interpretation_fr=interpretation_fr,
            interpretation_bfr=interpretation_bfr,
            interpretation_tresorerie=interpretation_tresorerie,
            niveau_sante=niveau_sante
        )
    
    @staticmethod
    def expliquer_formules() -> Dict[str, str]:
        """
        Retourne les formules avec explications pour affichage p√©dagogique
        """
        return {
            "fr": {
                "formule": "FR = (Capitaux Propres + Dettes Long Terme) - Immobilisations",
                "signification": "Marge de s√©curit√© financi√®re apr√®s financement des investissements",
                "objectif": "Doit √™tre POSITIF pour garantir la stabilit√©"
            },
            "bfr": {
                "formule": "BFR = (Stocks + Cr√©ances Clients) - Dettes Fournisseurs",
                "signification": "Argent bloqu√© dans le cycle d'exploitation",
                "objectif": "Plus il est FAIBLE, mieux c'est (moins d'argent immobilis√©)"
            },
            "tresorerie": {
                "formule": "Tr√©sorerie = FR - BFR",
                "signification": "Cash r√©ellement disponible en banque",
                "objectif": "Doit √™tre POSITIF pour √©viter le d√©couvert"
            }
        }
